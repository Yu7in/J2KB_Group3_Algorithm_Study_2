# -*- coding: utf-8 -*-
"""4963

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JU3LAI7zYXs48A4BqjnybwV-yc-qQJs2
"""

from collections import deque 

Dir = [[-1, 0], [1,0], [0,1], [0,-1], [1,1], [-1,-1], [1,-1], [-1,1]]

W = 0
H = 0

def isValid(y, x) :
  return (0 <= y < H) and (0 <= x < W)

def bfs(MAP, start, visited) :
  q = deque([start])

  while q :
    y, x = q.popleft()
    for d in Dir :
      dy = y + d[0]
      dx = x + d[1]
      if isValid(dy,dx) and not visited[dy][dx] and MAP[dy][dx] == 1 :
        visited[dy][dx] = True
        q.append((dy,dx))
  
  return visited

def _4963() :
  while True :
    global W, H
    MAP = []
    W, H = map(int, input().split())
    if W == H == 0 :
      return
    visited = [[False]*W for _ in range(H)]
    for y in range(H) :
      MAP.append(list(map(int, input().split())))
    
    cnt = 0
    for y in range(H) :
      for x in range(W) :
        if MAP[y][x] == 1 and not visited[y][x] :
          cnt += 1
          visited[y][x] = True
          visited = bfs(MAP, (y,x), visited)

    print(cnt)
    

_4963()