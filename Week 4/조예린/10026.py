# -*- coding: utf-8 -*-
"""10026

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JU3LAI7zYXs48A4BqjnybwV-yc-qQJs2
"""

from collections import deque 

Dir = [[-1,0],[1,0],[0,1],[0,-1]]

N = 0

def isValid(y, x) :
  return (0<=y<N) and (0<=x<N)

def RGB(start, same, MAP, visited) :
  
  queue = deque([start])
  
  while queue :
    node = queue.popleft()
    x, y = node[1], node[0]
    for d in Dir :
      dx = x + d[0]
      dy = y + d[1]
      if isValid(dy,dx) and not visited[dy][dx] and MAP[dy][dx] in same :
        visited[dy][dx] = True
        queue.append((dy,dx))
  
  return visited

def _10026() :
  global N
  N = int(input())
  MAP = []
  visited = [[False]*N for _ in range(N)]
  
  for _ in range(N) :
    MAP.append(list(input()))
  
  # R == G
  rgCnt = 0
  for y in range(N) :
    for x in range(N) :
      if MAP[y][x] in ['R', 'G'] and not visited[y][x] :
        visited = RGB((y,x), ['R','G'], MAP, visited)
        rgCnt += 1
      elif MAP[y][x] == 'B' and not visited[y][x] :
        visited = RGB((y,x),['B'], MAP, visited)
        rgCnt += 1
      visited[y][x] = True
      
  # RGB
  rgbCnt = 0
  visited = [[False]*N for _ in range(N)]
  for y in range(N) :
    for x in range(N) :
      if not visited[y][x] :
        rgbCnt += 1
        visited[y][x] = True
        visited = RGB((y,x), [MAP[y][x]], MAP, visited)
  
  print(rgbCnt, rgCnt)
  
  


_10026()